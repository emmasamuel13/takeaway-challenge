/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package takeaway.challenge;

import org.junit.Test;
import static org.junit.Assert.*;

import java.awt.*;
import java.util.ArrayList;

public class TakeawayTest {
    @Test public void ReturnsNameAndPrice() {
        MenuItem Dish = new MenuItem("Chicken korma", 5.99);
        assertEquals("returns the name", String.valueOf("Chicken korma"), Dish.GetDishName());
        assertEquals("returns the price", Double.valueOf(5.99), Dish.GetDishPrice());
    }

    @Test public void AddsDishesToMenu() {
        TakeawayMenu Menu = new TakeawayMenu();
        MenuItem KormaDish = new MenuItem("Chicken korma", 5.99);
        MenuItem TikkaMasalaDish = new MenuItem("Prawn tikka masala", 5.89);
        Menu.AddToMenu(KormaDish);
        Menu.AddToMenu(TikkaMasalaDish);
        ArrayList<takeaway.challenge.MenuItem> TestMenu = new ArrayList<>();
        TestMenu.add(KormaDish);
        TestMenu.add(TikkaMasalaDish);
        assertEquals("returns the menu with two dishes", TestMenu, Menu.ViewMenu());
    }

    @Test public void AddsDishesToOrder() {
        MenuItem KormaDish = new MenuItem("Chicken korma", 5.99);
        CustomerOrder Order = new CustomerOrder();
        Order.AddToOrder(KormaDish);
        ArrayList<takeaway.challenge.MenuItem> TestOrder = new ArrayList<>();
        TestOrder.add(KormaDish);
        assertEquals("returns the order with one dish", TestOrder, Order.ViewOrder());
    }

    @Test public void AddsToOrderAndChecksTotalIs24_47() {
        MenuItem PrawnBhuna = new MenuItem("Prawn Bhuna", 6.99);
        MenuItem MushroomRice = new MenuItem("Mushroom rice", 3.89);
        MenuItem Chips = new MenuItem("Bag of chips", 3.29);
        MenuItem KeemaNaan = new MenuItem("Keema Naan", 3.19);
        MenuItem NinePapadams = new MenuItem("Nine papadams", 7.11);
        CustomerOrder Order = new CustomerOrder();
        Order.AddToOrder(PrawnBhuna);
        Order.AddToOrder(MushroomRice);
        Order.AddToOrder(Chips);
        Order.AddToOrder(KeemaNaan);
        Order.AddToOrder(NinePapadams);
        assertTrue("Order equals £24.47", Order.CheckPrice(24.47));
    }

    @Test public void AddsToOrderAndChecksTotalIsNot25_47() {
        MenuItem PrawnBhuna = new MenuItem("Prawn Bhuna", 6.99);
        MenuItem MushroomRice = new MenuItem("Mushroom rice", 3.89);
        MenuItem Chips = new MenuItem("Bag of chips", 3.29);
        MenuItem KeemaNaan = new MenuItem("Keema Naan", 3.19);
        MenuItem NinePapadams = new MenuItem("Nine papadams", 7.11);
        CustomerOrder Order = new CustomerOrder();
        Order.AddToOrder(PrawnBhuna);
        Order.AddToOrder(MushroomRice);
        Order.AddToOrder(Chips);
        Order.AddToOrder(KeemaNaan);
        Order.AddToOrder(NinePapadams);
        assertFalse("Order doesn't equal £25.47", Order.CheckPrice(25.47));
    }

    @Test public void PlacesAnOrder() {
        MenuItem PrawnBhuna = new MenuItem("Prawn Bhuna", 6.99);
        MenuItem MushroomRice = new MenuItem("Mushroom rice", 3.89);
        MenuItem Chips = new MenuItem("Bag of chips", 3.29);
        MenuItem KeemaNaan = new MenuItem("Keema Naan", 3.19);
        MenuItem NinePapadams = new MenuItem("Nine papadams", 7.11);
        CustomerOrder Order = new CustomerOrder();
        Order.AddToOrder(PrawnBhuna);
        Order.AddToOrder(MushroomRice);
        Order.AddToOrder(Chips);
        Order.AddToOrder(KeemaNaan);
        Order.AddToOrder(NinePapadams);
        assertEquals("Places order","Thank you! Your order was placed and will be delivered before 11:04", Order.PlaceOrder());
    }
}